version: "3.8"

services:
  fastapi:
    image: pytocompany/fastapi:latest
    container_name: fastapi
    networks:
      - app-network
    ports:
      - "8000:8000"
    environment:
      ENV: "production"
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      FIREBASE_PRIVATE_KEY_ID: ${FIREBASE_PRIVATE_KEY_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_CLIENT_ID: ${FIREBASE_CLIENT_ID}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      MISTRAL_AI_API_KEY: ${MISTRAL_AI_API_KEY}
      OPEN_WEATHER_API_KEY: ${OPEN_WEATHER_API_KEY}
      DATABASE_HOST: postgresql
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      PATH_TO_MODELS: /app/models/
      PATH_TO_LOGS: /app/logs
    volumes:
      - ./static:/app/static
      - ./models:/app/models
      - ./logs:/app/logs
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api.pyto.eu/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgresql:
    image: postgres:16
    container_name: postgresql
    networks:
      - app-network
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    restart: always
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - fastapi
    networks:
      - app-network

networks:
  app-network:
    name: pyto_network
    driver: bridge
